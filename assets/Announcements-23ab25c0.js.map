{"version":3,"file":"Announcements-23ab25c0.js","sources":["../../src/demos/Announcements.vue?raw","../../src/components/NewFeatureOverlay.vue","../../src/components/NewFeatureOverlay.vue?vue&type=template&lang.js","../../src/demos/Announcements.vue","../../src/demos/Announcements.vue?vue&type=template&lang.js"],"sourcesContent":["export default \"<template>\\n  <div>\\n    <div class=\\\"section\\\">\\n      <h1>New Feature Overlay</h1>\\n      <p>\\n        You can trigger this with a button like\\n        <code>@click=\\\"$modal.show('new-feature')\\\"</code> or call\\n        <code>this.$modal.show('new-feature')\\\"</code> on mounted. You may need\\n        to set a few second delay on the trigger to prevent the modal closing\\n        when the page refreshes.\\n      </p>\\n      <pre><code>import { NewFeatureOverlay } from 'streamlabs-beaker';\\n\\ncomponents: {\\n  NewFeatureOverlay\\n}</code></pre>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n      <h2>New Feature Overlay</h2>\\n      <p>Used for new feature overlay.</p>\\n      <DemoSection title=\\\"New Feature Overlay\\\" :code=\\\"demoCode\\\">\\n        <template #components>\\n          <NewFeatureOverlay\\n            label=\\\"Introducing Merch Stores\\\"\\n            title=\\\"Increase Your Revenue\\\"\\n            media=\\\"\\n              https://cdn.streamlabs.com/cloudbot/prototype_cloudbot_800x300.webm\\n            \\\"\\n            buttonTitle=\\\"Go To Store\\\"\\n            :onOpen=\\\"trackingCodeComponent\\\"\\n            :onAction=\\\"trackingCodeButton\\\"\\n            buttonTag=\\\"a\\\"\\n            buttonHref=\\\"\\n              https://www.twitch.tv/ext/xab8h6nj36fc2wtn71yikw9hqjd6v4-0.0.1\\n            \\\"\\n            buttonTarget=\\\"_blank\\\"\\n          >\\n            <p>\\n              We’ve worked with some of the best developers in the industry to\\n              bring you the tools to take your stream to the next level.\\n            </p>\\n            <p>\\n              We’ve automatically credited $15.00 to your account so you can\\n              start trying them out today.\\n            </p>\\n          </NewFeatureOverlay>\\n        </template>\\n      </DemoSection>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n      <div class=\\\"s-button-container s-button-container--left\\\">\\n        <Button\\n          :variation=\\\"'default'\\\"\\n          :title=\\\"'New Feature Overlay'\\\"\\n          @click=\\\"$modal.show('new-feature')\\\"\\n        ></Button>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"docs-table\\\">\\n      <thead>\\n        <tr>\\n          <th>Props</th>\\n          <th>Type</th>\\n          <th>Default</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>label</td>\\n          <td>string</td>\\n          <td>null</td>\\n          <td>label to display</td>\\n        </tr>\\n        <tr>\\n          <td>title</td>\\n          <td>string</td>\\n          <td>null</td>\\n          <td>title to display</td>\\n        </tr>\\n        <tr>\\n          <td>media</td>\\n          <td>string</td>\\n          <td>null</td>\\n          <td>display image or video (you can select either of them)</td>\\n        </tr>\\n        <tr>\\n          <td>buttonTitle</td>\\n          <td>string</td>\\n          <td>null</td>\\n          <td>\\n            What type of element the button is,\\n            <code>button</code>, <code>a</code>,\\n            <code>router-link</code>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>buttonTag</td>\\n          <td>string</td>\\n          <td>null</td>\\n          <td>Text displayed in the action button</td>\\n        </tr>\\n        <tr>\\n          <td>buttonRoute</td>\\n          <td>string</td>\\n          <td>/</td>\\n          <td>\\n            Router link path for the action button if tag is\\n            <code>router-link</code>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>buttonHref</td>\\n          <td>string</td>\\n          <td>null</td>\\n          <td>\\n            href for the action button if tag is set to\\n            <code>a</code>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>buttonTarget</td>\\n          <td>string</td>\\n          <td>null</td>\\n          <td>\\n            Use to set different targets for button if set to\\n            <code>a</code>\\n            Options are:\\n            <code>_self</code>, <code>_blank</code>, <code>_parent</code>,\\n            <code>_top</code>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>dismissTitle</td>\\n          <td>string</td>\\n          <td>Go to Dashboard</td>\\n          <td>\\n            Text displayed in the link next to the action button to dismiss the\\n            announcement.\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>dismissRoute</td>\\n          <td>string</td>\\n          <td>/</td>\\n          <td>Router link path to dismiss the annoucement.</td>\\n        </tr>\\n        <tr>\\n          <td>onOpen</td>\\n          <td>function</td>\\n          <td>null</td>\\n          <td>Function to call out the tracking code of modal component.</td>\\n        </tr>\\n        <tr>\\n          <td>onAction</td>\\n          <td>function</td>\\n          <td>null</td>\\n          <td>Function to call out the tracking code of modal button.</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</template>\\n\\n<script lang=\\\"ts\\\">\\nimport { Component, Vue } from \\\"vue-property-decorator\\\";\\nimport AnnouncementsCode from \\\"./Announcements.vue?raw\\\";\\nimport Button from \\\"./../components/Button.vue\\\";\\nimport DemoSection from \\\"./../components/DemoSection.vue\\\";\\nimport NewFeatureOverlay from \\\"./../components/NewFeatureOverlay.vue\\\";\\n\\n@Component({\\n  components: {\\n    Button,\\n    DemoSection,\\n    NewFeatureOverlay\\n  }\\n})\\nexport default class AnnoucementsDemo extends Vue {\\n  demoCode = AnnouncementsCode;\\n  trackingCodeComponent() {\\n    console.log(\\\"componentEventTracking\\\");\\n    // ga('send','event', 'newfeatureoverlay', 'modal_shown', 'component');\\n  }\\n\\n  trackingCodeButton() {\\n    console.log(\\\"buttonEventTracking\\\");\\n    // ga('send','event', 'newfeatureoverlay', 'modal_click', 'button');\\n  }\\n}\\n</script>\\n\"","<template>\n  <modal\n    name=\"new-feature\"\n    :adaptive=\"true\"\n    :width=\"width\"\n    :height=\"height\"\n    classes=\"s-overlay__wrapper\"\n    :clickToClose=\"true\"\n    @opened=\"opened\"\n  >\n    <div slot=\"top-right\" class=\"s-overlay__icon\">\n      <span class=\"s-icon icon-close\" @click=\"onDismiss\"></span>\n    </div>\n    <div class=\"s-overlay__container\" :class=\"containerMq\">\n      <div class=\"s-overlay__body\">\n        <p class=\"s-overlay__label\">{{ label }}</p>\n        <h1 class=\"s-overlay__title\">{{ title }}</h1>\n        <p class=\"s-overlay__text\">\n          <slot></slot>\n        </p>\n        <div class=\"s-overlay-links\">\n          <Button\n            :size=\"'large'\"\n            :variation=\"'action'\"\n            :tag=\"buttonTag\"\n            :to=\"buttonRoute\"\n            :href=\"buttonHref\"\n            :target=\"buttonTarget\"\n            :title=\"buttonTitle\"\n            @click.native=\"onPrimaryAction\"\n          ></Button>\n          <router-link\n            class=\"s-overlay__link\"\n            :to=\"dismissRoute\"\n            @click.native=\"onDismiss\"\n            >{{ dismissText }}</router-link\n          >\n        </div>\n      </div>\n\n      <div class=\"s-overlay__image-block\" :class=\"overlay__imageBlockMq\">\n        <img v-if=\"isImage\" :src=\"overlayImage\" class=\"s-overlay__image\" />\n        <video\n          :controls=\"videoControls\"\n          autoplay\n          loop\n          v-if=\"!isImage\"\n          class=\"s-overlay__image\"\n        >\n          <source :src=\"overlayImage\" />\n          Environment does not support video playback\n        </video>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport Button from \"./../components/Button.vue\";\nimport VueMq from \"vue-mq\";\nimport VModal from \"vue-js-modal\";\n\nVue.use(VModal);\n\nVue.use(VueMq, {\n  breakpoints: {\n    // default breakpoints - customize this\n    sm: 900,\n    md: 1250,\n    lg: Infinity\n  },\n  defaultBreakpoint: \"sm\" // customize this for SSR\n});\n\n@Component({\n  components: {\n    Button\n  }\n})\nexport default class NewFeatureOverlay extends Vue {\n  @Prop({ default: \"100%\" })\n  width!: string | number;\n\n  @Prop({ default: \"auto\" })\n  height!: string | number;\n\n  @Prop()\n  label!: string;\n\n  @Prop()\n  title!: string;\n\n  @Prop()\n  media!: string;\n\n  @Prop()\n  buttonTitle!: string;\n\n  @Prop({ default: \"/\" })\n  buttonRoute!: string;\n\n  @Prop({ default: \"router-link\" })\n  buttonTag!: String;\n\n  @Prop()\n  buttonHref!: String;\n\n  @Prop()\n  buttonTarget!: String;\n\n  @Prop({ default: \"/\" })\n  dismissRoute!: string;\n\n  @Prop({ default: \"Go to Dashboard\" })\n  dismissText!: string;\n\n  @Prop()\n  onOpen!: Function;\n\n  @Prop()\n  onAction!: Function;\n\n  @Prop({ default: false })\n  videoControls!: boolean;\n\n  isImage: boolean = true;\n\n  get overlayImage() {\n    return this.media;\n  }\n\n  $mq!: string | string[];\n\n  get containerMq() {\n    return this.$mq === \"sm\" ? \"s-overlay__container--mq\" : \"\";\n  }\n\n  get overlay__imageBlockMq() {\n    return this.$mq === \"sm\" ? \"s-overlay__image-block--mq\" : \"\";\n  }\n\n  mounted() {\n    if (this.media.includes(\"mp4\") || this.media.includes(\"webm\")) {\n      this.isImage = false;\n    } else {\n      this.isImage = true;\n    }\n  }\n\n  opened(event) {\n    typeof this.onOpen === \"function\" && this.onOpen();\n  }\n\n  onPrimaryAction() {\n    typeof this.onAction === \"function\" && this.onAction();\n    this.onDismiss();\n  }\n\n  onDismiss() {\n    this.$modal.hide(\"new-feature\");\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import (reference) \"./../styles/Imports\";\n.s-overlay__container--mq {\n  display: block !important;\n}\n\n.s-overlay__image-block--mq {\n  width: 100% !important;\n  height: auto;\n}\n\n.v--modal-overlay {\n  background: @day-new-feature-overlay !important;\n}\n\n.s-overlay__wrapper {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  box-sizing: border-box;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 999;\n}\n\n.s-overlay__icon {\n  .padding(4);\n}\n\n.s-icon {\n  cursor: pointer;\n}\n\n.s-overlay__container {\n  width: 80%;\n  max-width: 1400px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 40px;\n}\n\n.s-overlay__body {\n  flex-basis: 50%;\n  text-align: left;\n}\n\n.s-overlay__label {\n  font-size: 16px;\n  .weight(@medium);\n  color: @dark-2;\n}\n\n.s-overlay__title {\n  font-size: 36px;\n  font-weight: 900;\n}\n\n.s-overlay__text {\n  line-height: 21px;\n  .margin-bottom(3);\n  font-size: 16px;\n}\n\n.s-overlay-links {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  .margin-top(4);\n}\n\n.s-overlay__link {\n  .margin-left(2);\n}\n\n.s-overlay__image-block {\n  text-align: center;\n  justify-self: center;\n  .margin-top(2);\n  overflow: hidden;\n}\n\n.s-overlay__image {\n  max-width: 100%;\n  width: auto;\n  .radius(2);\n}\n\n.night,\n.night-theme {\n  .v--modal-overlay {\n    background: @night-new-feature-overlay !important;\n  }\n\n  .s-overlay__label {\n    color: @white;\n  }\n}\n</style>\n\n<style lang=\"less\">\n@import (reference) \"./../styles/Imports\";\n\n.s-overlay__text {\n  line-height: 21px;\n  .margin-bottom(3);\n  font-size: 16px;\n\n  p,\n  * {\n    font-size: 16px;\n    line-height: 21px;\n    .margin-bottom(2);\n  }\n}\n</style>\n","\n<modal\n  name=\"new-feature\"\n  :adaptive=\"true\"\n  :width=\"width\"\n  :height=\"height\"\n  classes=\"s-overlay__wrapper\"\n  :clickToClose=\"true\"\n  @opened=\"opened\"\n>\n  <div slot=\"top-right\" class=\"s-overlay__icon\">\n    <span class=\"s-icon icon-close\" @click=\"onDismiss\"></span>\n  </div>\n  <div class=\"s-overlay__container\" :class=\"containerMq\">\n    <div class=\"s-overlay__body\">\n      <p class=\"s-overlay__label\">{{ label }}</p>\n      <h1 class=\"s-overlay__title\">{{ title }}</h1>\n      <p class=\"s-overlay__text\">\n        <slot></slot>\n      </p>\n      <div class=\"s-overlay-links\">\n        <Button\n          :size=\"'large'\"\n          :variation=\"'action'\"\n          :tag=\"buttonTag\"\n          :to=\"buttonRoute\"\n          :href=\"buttonHref\"\n          :target=\"buttonTarget\"\n          :title=\"buttonTitle\"\n          @click.native=\"onPrimaryAction\"\n        ></Button>\n        <router-link\n          class=\"s-overlay__link\"\n          :to=\"dismissRoute\"\n          @click.native=\"onDismiss\"\n          >{{ dismissText }}</router-link\n        >\n      </div>\n    </div>\n\n    <div class=\"s-overlay__image-block\" :class=\"overlay__imageBlockMq\">\n      <img v-if=\"isImage\" :src=\"overlayImage\" class=\"s-overlay__image\" />\n      <video\n        :controls=\"videoControls\"\n        autoplay\n        loop\n        v-if=\"!isImage\"\n        class=\"s-overlay__image\"\n      >\n        <source :src=\"overlayImage\" />\n        Environment does not support video playback\n      </video>\n    </div>\n  </div>\n</modal>\n","<template>\n  <div>\n    <div class=\"section\">\n      <h1>New Feature Overlay</h1>\n      <p>\n        You can trigger this with a button like\n        <code>@click=\"$modal.show('new-feature')\"</code> or call\n        <code>this.$modal.show('new-feature')\"</code> on mounted. You may need\n        to set a few second delay on the trigger to prevent the modal closing\n        when the page refreshes.\n      </p>\n      <pre><code>import { NewFeatureOverlay } from 'streamlabs-beaker';\n\ncomponents: {\n  NewFeatureOverlay\n}</code></pre>\n    </div>\n\n    <div class=\"section\">\n      <h2>New Feature Overlay</h2>\n      <p>Used for new feature overlay.</p>\n      <DemoSection title=\"New Feature Overlay\" :code=\"demoCode\">\n        <template #components>\n          <NewFeatureOverlay\n            label=\"Introducing Merch Stores\"\n            title=\"Increase Your Revenue\"\n            media=\"\n              https://cdn.streamlabs.com/cloudbot/prototype_cloudbot_800x300.webm\n            \"\n            buttonTitle=\"Go To Store\"\n            :onOpen=\"trackingCodeComponent\"\n            :onAction=\"trackingCodeButton\"\n            buttonTag=\"a\"\n            buttonHref=\"\n              https://www.twitch.tv/ext/xab8h6nj36fc2wtn71yikw9hqjd6v4-0.0.1\n            \"\n            buttonTarget=\"_blank\"\n          >\n            <p>\n              We’ve worked with some of the best developers in the industry to\n              bring you the tools to take your stream to the next level.\n            </p>\n            <p>\n              We’ve automatically credited $15.00 to your account so you can\n              start trying them out today.\n            </p>\n          </NewFeatureOverlay>\n        </template>\n      </DemoSection>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"s-button-container s-button-container--left\">\n        <Button\n          :variation=\"'default'\"\n          :title=\"'New Feature Overlay'\"\n          @click=\"$modal.show('new-feature')\"\n        ></Button>\n      </div>\n    </div>\n\n    <table class=\"docs-table\">\n      <thead>\n        <tr>\n          <th>Props</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>label</td>\n          <td>string</td>\n          <td>null</td>\n          <td>label to display</td>\n        </tr>\n        <tr>\n          <td>title</td>\n          <td>string</td>\n          <td>null</td>\n          <td>title to display</td>\n        </tr>\n        <tr>\n          <td>media</td>\n          <td>string</td>\n          <td>null</td>\n          <td>display image or video (you can select either of them)</td>\n        </tr>\n        <tr>\n          <td>buttonTitle</td>\n          <td>string</td>\n          <td>null</td>\n          <td>\n            What type of element the button is,\n            <code>button</code>, <code>a</code>,\n            <code>router-link</code>\n          </td>\n        </tr>\n        <tr>\n          <td>buttonTag</td>\n          <td>string</td>\n          <td>null</td>\n          <td>Text displayed in the action button</td>\n        </tr>\n        <tr>\n          <td>buttonRoute</td>\n          <td>string</td>\n          <td>/</td>\n          <td>\n            Router link path for the action button if tag is\n            <code>router-link</code>\n          </td>\n        </tr>\n        <tr>\n          <td>buttonHref</td>\n          <td>string</td>\n          <td>null</td>\n          <td>\n            href for the action button if tag is set to\n            <code>a</code>\n          </td>\n        </tr>\n        <tr>\n          <td>buttonTarget</td>\n          <td>string</td>\n          <td>null</td>\n          <td>\n            Use to set different targets for button if set to\n            <code>a</code>\n            Options are:\n            <code>_self</code>, <code>_blank</code>, <code>_parent</code>,\n            <code>_top</code>\n          </td>\n        </tr>\n        <tr>\n          <td>dismissTitle</td>\n          <td>string</td>\n          <td>Go to Dashboard</td>\n          <td>\n            Text displayed in the link next to the action button to dismiss the\n            announcement.\n          </td>\n        </tr>\n        <tr>\n          <td>dismissRoute</td>\n          <td>string</td>\n          <td>/</td>\n          <td>Router link path to dismiss the annoucement.</td>\n        </tr>\n        <tr>\n          <td>onOpen</td>\n          <td>function</td>\n          <td>null</td>\n          <td>Function to call out the tracking code of modal component.</td>\n        </tr>\n        <tr>\n          <td>onAction</td>\n          <td>function</td>\n          <td>null</td>\n          <td>Function to call out the tracking code of modal button.</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport AnnouncementsCode from \"./Announcements.vue?raw\";\nimport Button from \"./../components/Button.vue\";\nimport DemoSection from \"./../components/DemoSection.vue\";\nimport NewFeatureOverlay from \"./../components/NewFeatureOverlay.vue\";\n\n@Component({\n  components: {\n    Button,\n    DemoSection,\n    NewFeatureOverlay\n  }\n})\nexport default class AnnoucementsDemo extends Vue {\n  demoCode = AnnouncementsCode;\n  trackingCodeComponent() {\n    console.log(\"componentEventTracking\");\n    // ga('send','event', 'newfeatureoverlay', 'modal_shown', 'component');\n  }\n\n  trackingCodeButton() {\n    console.log(\"buttonEventTracking\");\n    // ga('send','event', 'newfeatureoverlay', 'modal_click', 'button');\n  }\n}\n</script>\n","\n  <div>\n    <div class=\"section\">\n      <h1>New Feature Overlay</h1>\n      <p>\n        You can trigger this with a button like\n        <code>@click=\"$modal.show('new-feature')\"</code> or call\n        <code>this.$modal.show('new-feature')\"</code> on mounted. You may need\n        to set a few second delay on the trigger to prevent the modal closing\n        when the page refreshes.\n      </p>\n      <pre><code>import { NewFeatureOverlay } from 'streamlabs-beaker';\n\ncomponents: {\n  NewFeatureOverlay\n}</code></pre>\n    </div>\n\n    <div class=\"section\">\n      <h2>New Feature Overlay</h2>\n      <p>Used for new feature overlay.</p>\n      <DemoSection title=\"New Feature Overlay\" :code=\"demoCode\">\n        <template #components>\n          <NewFeatureOverlay\n            label=\"Introducing Merch Stores\"\n            title=\"Increase Your Revenue\"\n            media=\"\n              https://cdn.streamlabs.com/cloudbot/prototype_cloudbot_800x300.webm\n            \"\n            buttonTitle=\"Go To Store\"\n            :onOpen=\"trackingCodeComponent\"\n            :onAction=\"trackingCodeButton\"\n            buttonTag=\"a\"\n            buttonHref=\"\n              https://www.twitch.tv/ext/xab8h6nj36fc2wtn71yikw9hqjd6v4-0.0.1\n            \"\n            buttonTarget=\"_blank\"\n          >\n            <p>\n              We’ve worked with some of the best developers in the industry to\n              bring you the tools to take your stream to the next level.\n            </p>\n            <p>\n              We’ve automatically credited $15.00 to your account so you can\n              start trying them out today.\n            </p>\n          </NewFeatureOverlay>\n        </template>\n      </DemoSection>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"s-button-container s-button-container--left\">\n        <Button\n          :variation=\"'default'\"\n          :title=\"'New Feature Overlay'\"\n          @click=\"$modal.show('new-feature')\"\n        ></Button>\n      </div>\n    </div>\n\n    <table class=\"docs-table\">\n      <thead>\n        <tr>\n          <th>Props</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>label</td>\n          <td>string</td>\n          <td>null</td>\n          <td>label to display</td>\n        </tr>\n        <tr>\n          <td>title</td>\n          <td>string</td>\n          <td>null</td>\n          <td>title to display</td>\n        </tr>\n        <tr>\n          <td>media</td>\n          <td>string</td>\n          <td>null</td>\n          <td>display image or video (you can select either of them)</td>\n        </tr>\n        <tr>\n          <td>buttonTitle</td>\n          <td>string</td>\n          <td>null</td>\n          <td>\n            What type of element the button is,\n            <code>button</code>, <code>a</code>,\n            <code>router-link</code>\n          </td>\n        </tr>\n        <tr>\n          <td>buttonTag</td>\n          <td>string</td>\n          <td>null</td>\n          <td>Text displayed in the action button</td>\n        </tr>\n        <tr>\n          <td>buttonRoute</td>\n          <td>string</td>\n          <td>/</td>\n          <td>\n            Router link path for the action button if tag is\n            <code>router-link</code>\n          </td>\n        </tr>\n        <tr>\n          <td>buttonHref</td>\n          <td>string</td>\n          <td>null</td>\n          <td>\n            href for the action button if tag is set to\n            <code>a</code>\n          </td>\n        </tr>\n        <tr>\n          <td>buttonTarget</td>\n          <td>string</td>\n          <td>null</td>\n          <td>\n            Use to set different targets for button if set to\n            <code>a</code>\n            Options are:\n            <code>_self</code>, <code>_blank</code>, <code>_parent</code>,\n            <code>_top</code>\n          </td>\n        </tr>\n        <tr>\n          <td>dismissTitle</td>\n          <td>string</td>\n          <td>Go to Dashboard</td>\n          <td>\n            Text displayed in the link next to the action button to dismiss the\n            announcement.\n          </td>\n        </tr>\n        <tr>\n          <td>dismissRoute</td>\n          <td>string</td>\n          <td>/</td>\n          <td>Router link path to dismiss the annoucement.</td>\n        </tr>\n        <tr>\n          <td>onOpen</td>\n          <td>function</td>\n          <td>null</td>\n          <td>Function to call out the tracking code of modal component.</td>\n        </tr>\n        <tr>\n          <td>onAction</td>\n          <td>function</td>\n          <td>null</td>\n          <td>Function to call out the tracking code of modal button.</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n"],"names":["VueMq","NewFeatureOverlay","__decorateClass","render","staticRenderFns"],"mappings":"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"}