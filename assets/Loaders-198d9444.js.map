{"version":3,"file":"Loaders-198d9444.js","sources":["../../src/demos/Loaders.vue?raw","../../src/components/Loading.vue","../../src/components/Loading.vue?vue&type=template&lang.js","../../src/demos/Loaders.vue","../../src/demos/Loaders.vue?vue&type=template&lang.js"],"sourcesContent":["export default \"<template>\\n  <div>\\n    <div class=\\\"section\\\">\\n      <h1>Loaders</h1>\\n      <p>\\n        These are animated with pure SVG, they will not be animated in Microsoft\\n        Edge, or Opera, and will look different in firefox.\\n      </p>\\n\\n      <div class=\\\"section\\\">\\n        <h2>Full Page Loading</h2>\\n\\n        <pre><code>import { Loading } from 'streamlabs-beaker';\\n\\ncomponents: {\\n  Loading\\n}</code></pre>\\n\\n        <div class=\\\"section\\\">\\n          <h2>Standard</h2>\\n\\n          <div class=\\\"section\\\">\\n            <DemoSection title=\\\"Standard\\\" :code=\\\"demoCode\\\">\\n              <template #components>\\n                <Loading\\n                  v-if=\\\"isLoading\\\"\\n                  :loadingStrs=\\\"string\\\"\\n                  @closeLoading=\\\"isLoading = false\\\"\\n                />\\n              </template>\\n            </DemoSection>\\n          </div>\\n\\n          <div class=\\\"s-button-container s-button-container--left\\\">\\n            <Button\\n              variation=\\\"default\\\"\\n              title=\\\"loading default\\\"\\n              @click=\\\"isLoading = true\\\"\\n            />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"section\\\">\\n          <h2>Semi-Opaque Background</h2>\\n\\n          <div class=\\\"section\\\">\\n            <DemoSection title=\\\"Semi-Opaque Background\\\" :code=\\\"demoCode\\\">\\n              <template #components>\\n                <Loading\\n                  v-if=\\\"isLoadingSemi\\\"\\n                  :semiOpaque=\\\"true\\\"\\n                  :loadingStrs=\\\"array\\\"\\n                  :isRandom=\\\"true\\\"\\n                  @closeLoading=\\\"isLoadingSemi = false\\\"\\n                />\\n              </template>\\n            </DemoSection>\\n          </div>\\n\\n          <div class=\\\"s-button-container s-button-container--left\\\">\\n            <Button\\n              variation=\\\"default\\\"\\n              title=\\\"loading semi opaque\\\"\\n              @click=\\\"isLoadingSemi = true\\\"\\n            />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"section\\\">\\n          <h2>Full Page Loading - Swapped</h2>\\n\\n          <div class=\\\"section\\\">\\n            <DemoSection title=\\\"Full Page Loading - Swapped\\\" :code=\\\"demoCode\\\">\\n              <template #components>\\n                <Loading\\n                  v-if=\\\"isLoadingSwapped\\\"\\n                  :loadingStrs=\\\"array\\\"\\n                  :isRandom=\\\"true\\\"\\n                  :swapMode=\\\"true\\\"\\n                  @closeLoading=\\\"isLoadingSwapped = false\\\"\\n                />\\n              </template>\\n            </DemoSection>\\n          </div>\\n\\n          <div class=\\\"s-button-container s-button-container--left\\\">\\n            <Button\\n              variation=\\\"default\\\"\\n              title=\\\"loading swapped option\\\"\\n              @click=\\\"isLoadingSwapped = true\\\"\\n            />\\n          </div>\\n        </div>\\n\\n        <table class=\\\"docs-table\\\">\\n          <thead>\\n            <tr>\\n              <th>Props</th>\\n              <th>Type</th>\\n              <th>Default</th>\\n              <th>Description</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td>loadingStrs</td>\\n              <td>any[] | string</td>\\n              <td>-</td>\\n              <td>\\n                Pass an array of stings into the loader. We recommend 3-4. Each\\n                shows for 4 seconds before it rotates.\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>isRandom</td>\\n              <td>boolean</td>\\n              <td>false</td>\\n              <td>\\n                Randomize the strings if you set\\n                <code>loadingStrs</code>as an array\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>semiOpaque</td>\\n              <td>boolean</td>\\n              <td>false</td>\\n              <td>\\n                Sets the background overlay to semi-opacity rather than full\\n                opacity.\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>swapMode</td>\\n              <td>boolean</td>\\n              <td>false</td>\\n              <td>\\n                In case you need to swap day/night mode - used for Creator\\n                Sites.\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>fixedBackground</td>\\n              <td>boolean</td>\\n              <td>true</td>\\n              <td>\\n                Allows loader to take dimensions of parent if set to\\n                <code>false</code>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n      <h2>Section Loading Spinners</h2>\\n\\n      <pre><code>import { Spinner } from 'streamlabs-beaker';\\n\\ncomponents: {\\n  Spinner\\n}</code></pre>\\n\\n      <h3>Loading Spinner</h3>\\n      <p>This is the standard size for sections within a page layout.</p>\\n\\n      <div class=\\\"section\\\">\\n        <DemoSection title=\\\"Loading Spinner\\\" :code=\\\"demoCode\\\">\\n          <template #components>\\n            <Spinner size=\\\"small\\\" />\\n          </template>\\n        </DemoSection>\\n      </div>\\n\\n      <h3>Loading Spinner Large</h3>\\n      <p>\\n        This is the large size spinner. It should only be used in large sections\\n        or full page transitions.\\n      </p>\\n\\n      <div class=\\\"section\\\">\\n        <DemoSection title=\\\"Loading Spinner Large\\\" :code=\\\"demoCode\\\">\\n          <template #components>\\n            <Spinner size=\\\"large\\\" />\\n          </template>\\n        </DemoSection>\\n      </div>\\n\\n      <table class=\\\"docs-table\\\">\\n        <thead>\\n          <tr>\\n            <th>Props</th>\\n            <th>Type</th>\\n            <th>Default</th>\\n            <th>Description</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>size</td>\\n            <td>String</td>\\n            <td>'small'</td>\\n            <td>'small', 'large'</td>\\n          </tr>\\n          <tr>\\n            <td>swap</td>\\n            <td>Boolean</td>\\n            <td>false</td>\\n            <td>\\n              If you need to swap day/night mode [ true ], default: [ false ]\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</template>\\n\\n<script lang=\\\"ts\\\">\\nimport { Component, Vue } from \\\"vue-property-decorator\\\";\\n\\nimport Accordion from \\\"./../components/Accordion.vue\\\";\\nimport Button from \\\"./../components/Button.vue\\\";\\nimport LoadersCode from \\\"./Loaders.vue?raw\\\";\\nimport DemoSection from \\\"./../components/DemoSection.vue\\\";\\nimport Loading from \\\"./../components/Loading.vue\\\";\\nimport Spinner from \\\"./../components/Spinner.vue\\\";\\n\\n@Component({\\n  components: {\\n    Accordion,\\n    Button,\\n    DemoSection,\\n    Loading,\\n    Spinner\\n  }\\n})\\nexport default class Loaders extends Vue {\\n  demoCode = LoadersCode;\\n  isLoading = false;\\n  isLoadingSemi = false;\\n  isLoadingSwapped = false;\\n\\n  array = [\\n    \\\"This loader is using an array of strings...\\\",\\n    \\\"Syncing all files to our cloud...\\\",\\n    \\\"Lorem ipsum dolor sit amet, consectetur...\\\",\\n    \\\"Sed do eiusmod tempor incididunt ut labore...\\\"\\n  ];\\n  string = \\\"This loader is using a single string...\\\";\\n}\\n</script>\\n\"","<template>\n  <div class=\"s-loader\" :swapMode=\"swapMode\">\n    <div\n      :class=\"{\n        's-loader__bg--semi': semiOpaque,\n        's-loader--modeswap': swapMode,\n        's-loader--fixed': fixedBackground\n      }\"\n      class=\"s-loader__bg\"\n    >\n      <div class=\"s-loader__inner\">\n        <Spinner :swap=\"swapMode\" class=\"s-spinner__overlay\" :size=\"'large'\" />\n        <div class=\"s-loader__text\">{{ loaderText }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport Spinner from \"./../components/Spinner.vue\";\nimport Button from \"./../components/Button.vue\";\n\n@Component({\n  components: { Spinner, Button }\n})\nexport default class Loading extends Vue {\n  @Prop({ default: [] })\n  loadingStrs!: any[] | string;\n\n  @Prop({ default: false })\n  semiOpaque!: boolean;\n\n  @Prop({ default: false })\n  isRandom!: boolean;\n\n  @Prop({ default: false })\n  swapMode!: Boolean;\n\n  @Prop({ default: true })\n  fixedBackground!: boolean;\n\n  loaderText: string = \"\";\n  index: number = 0;\n\n  mounted() {\n    if (typeof this.loadingStrs === \"string\") {\n      this.loaderText = this.loadingStrs;\n    } else {\n      this.distinguishNumberOfArrays();\n    }\n  }\n\n  distinguishNumberOfArrays() {\n    if (this.loadingStrs.length > 1) {\n      if (this.isRandom) {\n        this.loopRandomText();\n      } else {\n        this.loopText();\n      }\n    } else {\n      this.loaderText = this.loadingStrs[0];\n    }\n  }\n\n  loopText() {\n    this.loaderText = this.loadingStrs[this.index];\n    this.index++;\n    if (this.index === this.loadingStrs.length) {\n      this.index = 0;\n    }\n    setTimeout(this.loopText, 4000);\n  }\n\n  loopRandomText() {\n    const randomIndex = Math.floor(Math.random() * this.loadingStrs.length);\n    if (this.loaderText === this.loadingStrs[randomIndex]) {\n      this.loopRandomText();\n    } else {\n      this.loaderText = this.loadingStrs[randomIndex];\n      setTimeout(this.loopRandomText, 4000);\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import (reference) \"./../styles/Imports\";\n\n.s-loader__bg {\n  position: relative;\n  box-sizing: border-box;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: @white;\n  z-index: 999;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &.s-loader--fixed {\n    position: fixed;\n  }\n}\n\n.s-loader__bg--semi {\n  background: @day-overlay;\n}\n\n.s-loader__inner {\n  width: 100%;\n  height: auto;\n}\n\n.s-loader__text {\n  text-align: center;\n  color: @dark-2;\n  .weight(@medium);\n  .margin-top(3);\n  .margin-bottom(0);\n}\n\n.s-spinner__overlay {\n  .padding-top(0);\n}\n\n// in case day/night mode needs to be switched\n.s-loader--modeswap {\n  background: @dark-3;\n\n  .s-loader__text {\n    color: @white;\n  }\n}\n\n.night,\n.night-theme {\n  .s-loader__bg {\n    background: @dark-3;\n  }\n\n  .s-loader__bg--semi {\n    background: @night-overlay;\n  }\n\n  .s-loader__text {\n    color: @white;\n  }\n\n  // in case day/night mode needs to be switched\n  .s-loader--modeswap {\n    background: @white;\n\n    .s-loader__text {\n      color: @dark-2;\n    }\n  }\n}\n</style>\n","\n<div class=\"s-loader\" :swapMode=\"swapMode\">\n  <div\n    :class=\"{\n      's-loader__bg--semi': semiOpaque,\n      's-loader--modeswap': swapMode,\n      's-loader--fixed': fixedBackground\n    }\"\n    class=\"s-loader__bg\"\n  >\n    <div class=\"s-loader__inner\">\n      <Spinner :swap=\"swapMode\" class=\"s-spinner__overlay\" :size=\"'large'\" />\n      <div class=\"s-loader__text\">{{ loaderText }}</div>\n    </div>\n  </div>\n</div>\n","<template>\n  <div>\n    <div class=\"section\">\n      <h1>Loaders</h1>\n      <p>\n        These are animated with pure SVG, they will not be animated in Microsoft\n        Edge, or Opera, and will look different in firefox.\n      </p>\n\n      <div class=\"section\">\n        <h2>Full Page Loading</h2>\n\n        <pre><code>import { Loading } from 'streamlabs-beaker';\n\ncomponents: {\n  Loading\n}</code></pre>\n\n        <div class=\"section\">\n          <h2>Standard</h2>\n\n          <div class=\"section\">\n            <DemoSection title=\"Standard\" :code=\"demoCode\">\n              <template #components>\n                <Loading\n                  v-if=\"isLoading\"\n                  :loadingStrs=\"string\"\n                  @closeLoading=\"isLoading = false\"\n                />\n              </template>\n            </DemoSection>\n          </div>\n\n          <div class=\"s-button-container s-button-container--left\">\n            <Button\n              variation=\"default\"\n              title=\"loading default\"\n              @click=\"isLoading = true\"\n            />\n          </div>\n        </div>\n\n        <div class=\"section\">\n          <h2>Semi-Opaque Background</h2>\n\n          <div class=\"section\">\n            <DemoSection title=\"Semi-Opaque Background\" :code=\"demoCode\">\n              <template #components>\n                <Loading\n                  v-if=\"isLoadingSemi\"\n                  :semiOpaque=\"true\"\n                  :loadingStrs=\"array\"\n                  :isRandom=\"true\"\n                  @closeLoading=\"isLoadingSemi = false\"\n                />\n              </template>\n            </DemoSection>\n          </div>\n\n          <div class=\"s-button-container s-button-container--left\">\n            <Button\n              variation=\"default\"\n              title=\"loading semi opaque\"\n              @click=\"isLoadingSemi = true\"\n            />\n          </div>\n        </div>\n\n        <div class=\"section\">\n          <h2>Full Page Loading - Swapped</h2>\n\n          <div class=\"section\">\n            <DemoSection title=\"Full Page Loading - Swapped\" :code=\"demoCode\">\n              <template #components>\n                <Loading\n                  v-if=\"isLoadingSwapped\"\n                  :loadingStrs=\"array\"\n                  :isRandom=\"true\"\n                  :swapMode=\"true\"\n                  @closeLoading=\"isLoadingSwapped = false\"\n                />\n              </template>\n            </DemoSection>\n          </div>\n\n          <div class=\"s-button-container s-button-container--left\">\n            <Button\n              variation=\"default\"\n              title=\"loading swapped option\"\n              @click=\"isLoadingSwapped = true\"\n            />\n          </div>\n        </div>\n\n        <table class=\"docs-table\">\n          <thead>\n            <tr>\n              <th>Props</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>loadingStrs</td>\n              <td>any[] | string</td>\n              <td>-</td>\n              <td>\n                Pass an array of stings into the loader. We recommend 3-4. Each\n                shows for 4 seconds before it rotates.\n              </td>\n            </tr>\n            <tr>\n              <td>isRandom</td>\n              <td>boolean</td>\n              <td>false</td>\n              <td>\n                Randomize the strings if you set\n                <code>loadingStrs</code>as an array\n              </td>\n            </tr>\n            <tr>\n              <td>semiOpaque</td>\n              <td>boolean</td>\n              <td>false</td>\n              <td>\n                Sets the background overlay to semi-opacity rather than full\n                opacity.\n              </td>\n            </tr>\n            <tr>\n              <td>swapMode</td>\n              <td>boolean</td>\n              <td>false</td>\n              <td>\n                In case you need to swap day/night mode - used for Creator\n                Sites.\n              </td>\n            </tr>\n            <tr>\n              <td>fixedBackground</td>\n              <td>boolean</td>\n              <td>true</td>\n              <td>\n                Allows loader to take dimensions of parent if set to\n                <code>false</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <div class=\"section\">\n      <h2>Section Loading Spinners</h2>\n\n      <pre><code>import { Spinner } from 'streamlabs-beaker';\n\ncomponents: {\n  Spinner\n}</code></pre>\n\n      <h3>Loading Spinner</h3>\n      <p>This is the standard size for sections within a page layout.</p>\n\n      <div class=\"section\">\n        <DemoSection title=\"Loading Spinner\" :code=\"demoCode\">\n          <template #components>\n            <Spinner size=\"small\" />\n          </template>\n        </DemoSection>\n      </div>\n\n      <h3>Loading Spinner Large</h3>\n      <p>\n        This is the large size spinner. It should only be used in large sections\n        or full page transitions.\n      </p>\n\n      <div class=\"section\">\n        <DemoSection title=\"Loading Spinner Large\" :code=\"demoCode\">\n          <template #components>\n            <Spinner size=\"large\" />\n          </template>\n        </DemoSection>\n      </div>\n\n      <table class=\"docs-table\">\n        <thead>\n          <tr>\n            <th>Props</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>size</td>\n            <td>String</td>\n            <td>'small'</td>\n            <td>'small', 'large'</td>\n          </tr>\n          <tr>\n            <td>swap</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>\n              If you need to swap day/night mode [ true ], default: [ false ]\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport Accordion from \"./../components/Accordion.vue\";\nimport Button from \"./../components/Button.vue\";\nimport LoadersCode from \"./Loaders.vue?raw\";\nimport DemoSection from \"./../components/DemoSection.vue\";\nimport Loading from \"./../components/Loading.vue\";\nimport Spinner from \"./../components/Spinner.vue\";\n\n@Component({\n  components: {\n    Accordion,\n    Button,\n    DemoSection,\n    Loading,\n    Spinner\n  }\n})\nexport default class Loaders extends Vue {\n  demoCode = LoadersCode;\n  isLoading = false;\n  isLoadingSemi = false;\n  isLoadingSwapped = false;\n\n  array = [\n    \"This loader is using an array of strings...\",\n    \"Syncing all files to our cloud...\",\n    \"Lorem ipsum dolor sit amet, consectetur...\",\n    \"Sed do eiusmod tempor incididunt ut labore...\"\n  ];\n  string = \"This loader is using a single string...\";\n}\n</script>\n","\n  <div>\n    <div class=\"section\">\n      <h1>Loaders</h1>\n      <p>\n        These are animated with pure SVG, they will not be animated in Microsoft\n        Edge, or Opera, and will look different in firefox.\n      </p>\n\n      <div class=\"section\">\n        <h2>Full Page Loading</h2>\n\n        <pre><code>import { Loading } from 'streamlabs-beaker';\n\ncomponents: {\n  Loading\n}</code></pre>\n\n        <div class=\"section\">\n          <h2>Standard</h2>\n\n          <div class=\"section\">\n            <DemoSection title=\"Standard\" :code=\"demoCode\">\n              <template #components>\n                <Loading\n                  v-if=\"isLoading\"\n                  :loadingStrs=\"string\"\n                  @closeLoading=\"isLoading = false\"\n                />\n              </template>\n            </DemoSection>\n          </div>\n\n          <div class=\"s-button-container s-button-container--left\">\n            <Button\n              variation=\"default\"\n              title=\"loading default\"\n              @click=\"isLoading = true\"\n            />\n          </div>\n        </div>\n\n        <div class=\"section\">\n          <h2>Semi-Opaque Background</h2>\n\n          <div class=\"section\">\n            <DemoSection title=\"Semi-Opaque Background\" :code=\"demoCode\">\n              <template #components>\n                <Loading\n                  v-if=\"isLoadingSemi\"\n                  :semiOpaque=\"true\"\n                  :loadingStrs=\"array\"\n                  :isRandom=\"true\"\n                  @closeLoading=\"isLoadingSemi = false\"\n                />\n              </template>\n            </DemoSection>\n          </div>\n\n          <div class=\"s-button-container s-button-container--left\">\n            <Button\n              variation=\"default\"\n              title=\"loading semi opaque\"\n              @click=\"isLoadingSemi = true\"\n            />\n          </div>\n        </div>\n\n        <div class=\"section\">\n          <h2>Full Page Loading - Swapped</h2>\n\n          <div class=\"section\">\n            <DemoSection title=\"Full Page Loading - Swapped\" :code=\"demoCode\">\n              <template #components>\n                <Loading\n                  v-if=\"isLoadingSwapped\"\n                  :loadingStrs=\"array\"\n                  :isRandom=\"true\"\n                  :swapMode=\"true\"\n                  @closeLoading=\"isLoadingSwapped = false\"\n                />\n              </template>\n            </DemoSection>\n          </div>\n\n          <div class=\"s-button-container s-button-container--left\">\n            <Button\n              variation=\"default\"\n              title=\"loading swapped option\"\n              @click=\"isLoadingSwapped = true\"\n            />\n          </div>\n        </div>\n\n        <table class=\"docs-table\">\n          <thead>\n            <tr>\n              <th>Props</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>loadingStrs</td>\n              <td>any[] | string</td>\n              <td>-</td>\n              <td>\n                Pass an array of stings into the loader. We recommend 3-4. Each\n                shows for 4 seconds before it rotates.\n              </td>\n            </tr>\n            <tr>\n              <td>isRandom</td>\n              <td>boolean</td>\n              <td>false</td>\n              <td>\n                Randomize the strings if you set\n                <code>loadingStrs</code>as an array\n              </td>\n            </tr>\n            <tr>\n              <td>semiOpaque</td>\n              <td>boolean</td>\n              <td>false</td>\n              <td>\n                Sets the background overlay to semi-opacity rather than full\n                opacity.\n              </td>\n            </tr>\n            <tr>\n              <td>swapMode</td>\n              <td>boolean</td>\n              <td>false</td>\n              <td>\n                In case you need to swap day/night mode - used for Creator\n                Sites.\n              </td>\n            </tr>\n            <tr>\n              <td>fixedBackground</td>\n              <td>boolean</td>\n              <td>true</td>\n              <td>\n                Allows loader to take dimensions of parent if set to\n                <code>false</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <div class=\"section\">\n      <h2>Section Loading Spinners</h2>\n\n      <pre><code>import { Spinner } from 'streamlabs-beaker';\n\ncomponents: {\n  Spinner\n}</code></pre>\n\n      <h3>Loading Spinner</h3>\n      <p>This is the standard size for sections within a page layout.</p>\n\n      <div class=\"section\">\n        <DemoSection title=\"Loading Spinner\" :code=\"demoCode\">\n          <template #components>\n            <Spinner size=\"small\" />\n          </template>\n        </DemoSection>\n      </div>\n\n      <h3>Loading Spinner Large</h3>\n      <p>\n        This is the large size spinner. It should only be used in large sections\n        or full page transitions.\n      </p>\n\n      <div class=\"section\">\n        <DemoSection title=\"Loading Spinner Large\" :code=\"demoCode\">\n          <template #components>\n            <Spinner size=\"large\" />\n          </template>\n        </DemoSection>\n      </div>\n\n      <table class=\"docs-table\">\n        <thead>\n          <tr>\n            <th>Props</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>size</td>\n            <td>String</td>\n            <td>'small'</td>\n            <td>'small', 'large'</td>\n          </tr>\n          <tr>\n            <td>swap</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>\n              If you need to swap day/night mode [ true ], default: [ false ]\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n"],"names":["Loading","__decorateClass","render","staticRenderFns","Loaders"],"mappings":";;;;;;;;;;;AAAA,MAAe,cAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA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"}