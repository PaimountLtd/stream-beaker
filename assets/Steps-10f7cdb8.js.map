{"version":3,"file":"Steps-10f7cdb8.js","sources":["../../src/components/Step.vue","../../src/components/Step.vue?vue&type=template&lang.js","../../src/demos/Steps.vue?raw","../../src/demos/Steps.vue","../../src/demos/Steps.vue?vue&type=template&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"s-step\"\n    :class=\"{ 's-step--completed': isCompleted, checked: hasCheckmark }\"\n  >\n    <div class=\"s-step__title\">\n      <span class=\"s-step__icon\" :class=\"icon\" v-if=\"icon\"></span>\n      <span class=\"s-step__icon icon-check-mark\" v-if=\"hasCheckmark\"></span>\n      <p class=\"s-step__title-text\">{{ title }}</p>\n      <Badge\n        class=\"s-step__badge\"\n        v-if=\"hasPrime\"\n        :variant=\"'prime-alt'\"\n        :align-left=\"true\"\n      ></Badge>\n    </div>\n    <slot v-if=\"!isCompleted\"></slot>\n    <div v-if=\"isCompleted\">{{ completedText }}</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport Badge from \"./../components/Badge.vue\";\n\n@Component({\n  components: {\n    Badge\n  }\n})\nexport default class Step extends Vue {\n  @Prop(String)\n  title!: string;\n\n  @Prop(String)\n  icon!: string;\n\n  @Prop({ default: false })\n  isCompleted!: boolean;\n\n  @Prop(String)\n  completedText!: string;\n\n  @Prop({ default: false })\n  hasCheckmark!: boolean;\n\n  @Prop({ default: false })\n  hasPrime!: boolean;\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import (reference) \"./../styles/Imports\";\n\n.s-step {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: @dark-5;\n  .radius();\n  .padding(1.5);\n  .padding-h-sides(1.5);\n}\n\n.s-step__title {\n  color: @white;\n  line-height: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.s-step__title-text {\n  .margin(0);\n  color: @night-title;\n  .weight(@medium);\n}\n\n.s-step__icon {\n  margin-right: 8px;\n}\n\n.s-step__badge {\n  margin-left: 8px;\n}\n\n.s-step--completed {\n  color: @dark-5;\n  background: @dark-4;\n  .s-step__icon,\n  .s-step__title-text,\n  .s-step__badge {\n    color: @dark-5;\n  }\n}\n\n.checked {\n  .s-step__title-text {\n    text-decoration: line-through;\n  }\n}\n\n.night,\n.night-theme {\n  .s-step__title-text {\n    color: @night-title;\n  }\n\n  .s-step--completed {\n    color: @dark-5;\n\n    .s-step__icon,\n    .s-step__title-text,\n    .s-step__badge {\n      color: @dark-5;\n    }\n  }\n}\n</style>\n","\n<div\n  class=\"s-step\"\n  :class=\"{ 's-step--completed': isCompleted, checked: hasCheckmark }\"\n>\n  <div class=\"s-step__title\">\n    <span class=\"s-step__icon\" :class=\"icon\" v-if=\"icon\"></span>\n    <span class=\"s-step__icon icon-check-mark\" v-if=\"hasCheckmark\"></span>\n    <p class=\"s-step__title-text\">{{ title }}</p>\n    <Badge\n      class=\"s-step__badge\"\n      v-if=\"hasPrime\"\n      :variant=\"'prime-alt'\"\n      :align-left=\"true\"\n    ></Badge>\n  </div>\n  <slot v-if=\"!isCompleted\"></slot>\n  <div v-if=\"isCompleted\">{{ completedText }}</div>\n</div>\n","export default \"<template>\\n  <div>\\n    <div class=\\\"section\\\">\\n      <h1>Step</h1>\\n      <p>step component</p>\\n\\n      <pre><code>import { Step } from 'streamlabs-beaker';\\n\\ncomponents: {\\n  Step\\n}</code></pre>\\n    </div>\\n\\n    <div class=\\\"section\\\">\\n      <div class=\\\"row\\\">\\n        <DemoSection title=\\\"Default\\\" :code=\\\"demoCode\\\">\\n          <template #components>\\n            <FormGroup>\\n              <Step slot=\\\"input\\\" title=\\\"Enable Pro\\\">\\n                <div class=\\\"info\\\">\\n                  <p>+20 CCV</p>\\n                  <i class=\\\"icon-information\\\"></i>\\n                </div>\\n              </Step>\\n\\n              <Step\\n                slot=\\\"input\\\"\\n                title=\\\"Enable Pro\\\"\\n                :isCompleted=\\\"true\\\"\\n                :hasCheckmark=\\\"true\\\"\\n                completedText=\\\"Complete\\\"\\n              >\\n                <div class=\\\"info\\\">\\n                  <p>+20 CCV</p>\\n                  <i class=\\\"icon-information\\\"></i>\\n                </div>\\n              </Step>\\n\\n              <Step\\n                slot=\\\"input\\\"\\n                icon=\\\"icon-donation-settings\\\"\\n                title=\\\"Tip\\\"\\n                :hasPrime=\\\"true\\\"\\n                >0/1</Step\\n              >\\n\\n              <Step\\n                slot=\\\"input\\\"\\n                icon=\\\"icon-donation-settings\\\"\\n                title=\\\"Tip\\\"\\n                :isCompleted=\\\"true\\\"\\n                completedText=\\\"1/1\\\"\\n                >0/1</Step\\n              >\\n            </FormGroup>\\n          </template>\\n        </DemoSection>\\n      </div>\\n\\n      <table class=\\\"docs-table\\\">\\n        <thead>\\n          <tr>\\n            <th>Props</th>\\n            <th>Type</th>\\n            <th>Default</th>\\n            <th>Description</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>title</td>\\n            <td>String</td>\\n            <td>null</td>\\n            <td>title to display</td>\\n          </tr>\\n          <tr>\\n            <td>icon</td>\\n            <td>String</td>\\n            <td>null</td>\\n            <td>icon to display</td>\\n          </tr>\\n          <tr>\\n            <td>isCompleted</td>\\n            <td>Boolean</td>\\n            <td>false</td>\\n            <td>\\n              background would be @dark-4, color would be @dark-5 when it is\\n              true\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>completedText</td>\\n            <td>String</td>\\n            <td>null</td>\\n            <td>\\n              It shows instead of slot when isCompleted is true\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>isChecked</td>\\n            <td>Boolean</td>\\n            <td>false</td>\\n            <td>\\n              add check mark icon and line through for title when it is true\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>hasPrime</td>\\n            <td>Boolean</td>\\n            <td>false</td>\\n            <td>It shows prime alt badge when it is true</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</template>\\n\\n<script lang=\\\"ts\\\">\\nimport { Component, Vue } from \\\"vue-property-decorator\\\";\\n\\nimport DemoSection from \\\"./../components/DemoSection.vue\\\";\\nimport FormGroup from \\\"./../components/FormGroup.vue\\\";\\nimport Step from \\\"./../components/Step.vue\\\";\\nimport StepsCode from \\\"./Steps.vue?raw\\\";\\n\\n@Component({\\n  components: {\\n    DemoSection,\\n    FormGroup,\\n    Step\\n  }\\n})\\nexport default class Steps extends Vue {\\n  demoCode = StepsCode;\\n}\\n</script>\\n\\n<style lang=\\\"less\\\" scoped>\\n@import (reference) \\\"./../styles/Imports\\\";\\n\\n.info {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n\\n  p {\\n    .margin(0);\\n    margin-right: 15px;\\n    color: @dark-5;\\n    background: @light-blue;\\n    .weight(@medium);\\n    .radius();\\n    .padding();\\n  }\\n}\\n</style>\\n\"","<template>\n  <div>\n    <div class=\"section\">\n      <h1>Step</h1>\n      <p>step component</p>\n\n      <pre><code>import { Step } from 'streamlabs-beaker';\n\ncomponents: {\n  Step\n}</code></pre>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"row\">\n        <DemoSection title=\"Default\" :code=\"demoCode\">\n          <template #components>\n            <FormGroup>\n              <Step slot=\"input\" title=\"Enable Pro\">\n                <div class=\"info\">\n                  <p>+20 CCV</p>\n                  <i class=\"icon-information\"></i>\n                </div>\n              </Step>\n\n              <Step\n                slot=\"input\"\n                title=\"Enable Pro\"\n                :isCompleted=\"true\"\n                :hasCheckmark=\"true\"\n                completedText=\"Complete\"\n              >\n                <div class=\"info\">\n                  <p>+20 CCV</p>\n                  <i class=\"icon-information\"></i>\n                </div>\n              </Step>\n\n              <Step\n                slot=\"input\"\n                icon=\"icon-donation-settings\"\n                title=\"Tip\"\n                :hasPrime=\"true\"\n                >0/1</Step\n              >\n\n              <Step\n                slot=\"input\"\n                icon=\"icon-donation-settings\"\n                title=\"Tip\"\n                :isCompleted=\"true\"\n                completedText=\"1/1\"\n                >0/1</Step\n              >\n            </FormGroup>\n          </template>\n        </DemoSection>\n      </div>\n\n      <table class=\"docs-table\">\n        <thead>\n          <tr>\n            <th>Props</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>title</td>\n            <td>String</td>\n            <td>null</td>\n            <td>title to display</td>\n          </tr>\n          <tr>\n            <td>icon</td>\n            <td>String</td>\n            <td>null</td>\n            <td>icon to display</td>\n          </tr>\n          <tr>\n            <td>isCompleted</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>\n              background would be @dark-4, color would be @dark-5 when it is\n              true\n            </td>\n          </tr>\n          <tr>\n            <td>completedText</td>\n            <td>String</td>\n            <td>null</td>\n            <td>\n              It shows instead of slot when isCompleted is true\n            </td>\n          </tr>\n          <tr>\n            <td>isChecked</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>\n              add check mark icon and line through for title when it is true\n            </td>\n          </tr>\n          <tr>\n            <td>hasPrime</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>It shows prime alt badge when it is true</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport DemoSection from \"./../components/DemoSection.vue\";\nimport FormGroup from \"./../components/FormGroup.vue\";\nimport Step from \"./../components/Step.vue\";\nimport StepsCode from \"./Steps.vue?raw\";\n\n@Component({\n  components: {\n    DemoSection,\n    FormGroup,\n    Step\n  }\n})\nexport default class Steps extends Vue {\n  demoCode = StepsCode;\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import (reference) \"./../styles/Imports\";\n\n.info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  p {\n    .margin(0);\n    margin-right: 15px;\n    color: @dark-5;\n    background: @light-blue;\n    .weight(@medium);\n    .radius();\n    .padding();\n  }\n}\n</style>\n","\n  <div>\n    <div class=\"section\">\n      <h1>Step</h1>\n      <p>step component</p>\n\n      <pre><code>import { Step } from 'streamlabs-beaker';\n\ncomponents: {\n  Step\n}</code></pre>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"row\">\n        <DemoSection title=\"Default\" :code=\"demoCode\">\n          <template #components>\n            <FormGroup>\n              <Step slot=\"input\" title=\"Enable Pro\">\n                <div class=\"info\">\n                  <p>+20 CCV</p>\n                  <i class=\"icon-information\"></i>\n                </div>\n              </Step>\n\n              <Step\n                slot=\"input\"\n                title=\"Enable Pro\"\n                :isCompleted=\"true\"\n                :hasCheckmark=\"true\"\n                completedText=\"Complete\"\n              >\n                <div class=\"info\">\n                  <p>+20 CCV</p>\n                  <i class=\"icon-information\"></i>\n                </div>\n              </Step>\n\n              <Step\n                slot=\"input\"\n                icon=\"icon-donation-settings\"\n                title=\"Tip\"\n                :hasPrime=\"true\"\n                >0/1</Step\n              >\n\n              <Step\n                slot=\"input\"\n                icon=\"icon-donation-settings\"\n                title=\"Tip\"\n                :isCompleted=\"true\"\n                completedText=\"1/1\"\n                >0/1</Step\n              >\n            </FormGroup>\n          </template>\n        </DemoSection>\n      </div>\n\n      <table class=\"docs-table\">\n        <thead>\n          <tr>\n            <th>Props</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>title</td>\n            <td>String</td>\n            <td>null</td>\n            <td>title to display</td>\n          </tr>\n          <tr>\n            <td>icon</td>\n            <td>String</td>\n            <td>null</td>\n            <td>icon to display</td>\n          </tr>\n          <tr>\n            <td>isCompleted</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>\n              background would be @dark-4, color would be @dark-5 when it is\n              true\n            </td>\n          </tr>\n          <tr>\n            <td>completedText</td>\n            <td>String</td>\n            <td>null</td>\n            <td>\n              It shows instead of slot when isCompleted is true\n            </td>\n          </tr>\n          <tr>\n            <td>isChecked</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>\n              add check mark icon and line through for title when it is true\n            </td>\n          </tr>\n          <tr>\n            <td>hasPrime</td>\n            <td>Boolean</td>\n            <td>false</td>\n            <td>It shows prime alt badge when it is true</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n"],"names":["Step","__decorateClass","render","staticRenderFns","Steps"],"mappings":"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"}